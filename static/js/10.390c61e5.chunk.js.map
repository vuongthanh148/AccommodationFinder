{"version":3,"sources":["components/NewPost.js"],"names":["useStyles","makeStyles","theme","formHelperText","marginLeft","color","palette","error","main","gridlist","width","paddingBottom","btn","display","marginBottom","imgFrame","position","opacity","fontWeight","fontSize","paddingRight","cursor","top","right","UploadImage","props","files","setFiles","imgData","setImgData","updateListAvatar","console","log","classes","handleChange","useCallback","event","fileList","target","length","filePromises","Array","from","slice","Math","max","map","file","Promise","resolve","fileReader","FileReader","onloadend","readEvent","base64","result","readAsDataURL","all","then","values","newImgs","value","newFiles","removeImage","removeIndex","filter","_","fileIndex","imgIndex","type","multiple","min","onChange","className","cols","img","src","alt","onClick","MainInfo","formik","listCity","listDistrict","setListCity","setListDistrict","listWard","setListWard","listPublicLocation","setListPublicLocation","touched","errors","setFieldValue","useState","selectedCity","setSelectedCity","selectedDistrict","setSelectedDistrict","selectedWard","setSelectedWard","selectedLocation","setSelectedLocation","mb","htmlFor","variant","fullWidth","id","size","title","helperText","FormHelperTextProps","clsx","options","e","a","axios","get","ID","res","data","item","Title","replace","label","placeholder","style","city","district","ward","street","number","pb","livingArea","accommodationType","price","week","Furniture","container","lg","md","sm","xs","control","checked","seperateAccomod","bathroom","airConditioner","electricWaterHeater","bedroom","balcony","washingMachine","fridge","kitchen","mu","waterPrice","electricityPrice","NewPost","listAvatar","useEffect","LtsItem","cities","l","name","listPlace","handleSubmit","newfiles","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","photos","listPromise","f","ImgData","FormData","append","config","headers","Authorization","Accept","p","rej","post","push","forEach","link","_id","userData","phoneNumber","accomodInfo","houseNumber","parseInt","publicPlace","seperateAccommodation","timeToLive","facilitiesInfo","seperate","amount","method","url","localStorage","getItem","success","location","href","catch","response","newPostValidationSchema","yup","shape","required","nullable","useFormik","initialValues","validationSchema","onSubmit","helpers","activeStep","setActiveStep","steps","useMemo","handlePrevStep","handleNextStep","getStepContent","step","getStepButtons","disabled","isSubmitting","maxWidth","marginTop","stepIndex"],"mappings":"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","file":"static/js/10.390c61e5.chunk.js","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  CircularProgress,\r\n  Container,\r\n  FormHelperText,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  makeStyles,\r\n  GridList,\r\n  GridListTile,\r\n} from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport Select from 'react-select'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formHelperText: {\r\n    marginLeft: 0,\r\n    color: theme.palette.error.main,\r\n  },\r\n  gridlist: {\r\n    width: 600,\r\n    paddingBottom: 15,\r\n  },\r\n  btn: {\r\n    display: 'inline-block',\r\n    marginBottom: 15,\r\n  },\r\n  imgFrame: {\r\n    position: 'relative',\r\n    '& span': {\r\n      display: 'none',\r\n    },\r\n    '&:hover': {\r\n      opacity: 0.5,\r\n    },\r\n    '&:hover span': {\r\n      display: 'inline-block',\r\n      position: 'absolute',\r\n      color: '#ffffff',\r\n      fontWeight: 'bold',\r\n      fontSize: 40,\r\n      paddingRight: 15,\r\n      cursor: 'pointer',\r\n      top: 0,\r\n      right: 0,\r\n    },\r\n  },\r\n}))\r\n\r\n// begin for upload\r\n\r\nconst UploadImage = (props) => {\r\n  let { files, setFiles, imgData, setImgData, updateListAvatar} = props\r\n  console.log('files in upload: ', files)\r\n  const classes = useStyles()\r\n  /**\r\n   *\r\n   * @type {(event: React.ChangeEvent<HTMLInputElement>) => void}\r\n   */\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      let fileList = event.target.files\r\n      let fileListLength = fileList.length\r\n      if (fileListLength) {\r\n        /**\r\n         * @type {Promise<[string, File]>[]}\r\n         */\r\n        const filePromises = Array.from(fileList)\r\n          .slice(0, Math.max(5 - files.length, 0))\r\n          .map((file) => {\r\n            return new Promise((resolve) => {\r\n              const fileReader = new FileReader()\r\n              fileReader.onloadend = (readEvent) => {\r\n                const base64 = readEvent.target.result\r\n                resolve([base64, file])\r\n              }\r\n              fileReader.readAsDataURL(file)\r\n            })\r\n          })\r\n        Promise.all(filePromises).then((values) => {\r\n          const newImgs = values.map((value) => value[0])\r\n          const newFiles = values.map((value) => value[1])\r\n          setFiles([...files, ...newFiles])\r\n          setImgData([...imgData, ...newImgs])\r\n        })\r\n        console.log('file after load: ', files)\r\n        if(files.length > 0){\r\n          updateListAvatar(files)\r\n        }\r\n      }\r\n    },\r\n    [files, imgData]\r\n  )\r\n\r\n  /**\r\n   * @type {(removeIndex: number) => void}\r\n   */\r\n  const removeImage = useCallback(\r\n    (removeIndex) => {\r\n      setFiles(files.filter((_, fileIndex) => fileIndex !== removeIndex))\r\n      setImgData(imgData.filter((_, imgIndex) => imgIndex !== removeIndex))\r\n    },\r\n    [files, imgData]\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input type=\"file\" multiple={true} min={3} max={5} onChange={handleChange} />\r\n      </label>\r\n      <GridList className={classes.gridlist} cols={2}>\r\n        {imgData.map((img, imgIndex) => {\r\n          return (\r\n            <GridListTile key={imgIndex} cols={1} className={classes.imgFrame}>\r\n              <img src={img} alt=\"\" />\r\n              <span onClick={() => removeImage(imgIndex)}>&times;</span>\r\n            </GridListTile>\r\n          )\r\n        })}\r\n      </GridList>\r\n    </div>\r\n  )\r\n}\r\n\r\n// end for upload\r\n\r\n// thông tin cơ bản\r\nconst MainInfo = (props) => {\r\n  const {\r\n    formik,\r\n    listCity,\r\n    setListCity,\r\n    listDistrict,\r\n    setListDistrict,\r\n    listWard,\r\n    setListWard,\r\n    listPublicLocation,\r\n    setListPublicLocation,\r\n  } = props\r\n  const { values, touched, errors, handleChange, setFieldValue } = formik\r\n  const classes = useStyles()\r\n\r\n  let [selectedCity, setSelectedCity] = useState()\r\n  let [selectedDistrict, setSelectedDistrict] = useState()\r\n  let [selectedWard, setSelectedWard] = useState()\r\n  let [selectedLocation, setSelectedLocation] = useState()\r\n\r\n  return (\r\n    <>\r\n      {/* Title */}\r\n      <Box mb={3}>\r\n        <InputLabel htmlFor=\"title\">Tiêu đề</InputLabel>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          fullWidth\r\n          id=\"title\"\r\n          size=\"small\"\r\n          value={values.title}\r\n          onChange={handleChange('title')}\r\n          helperText={touched.title && errors.title}\r\n          FormHelperTextProps={{\r\n            className: clsx(classes.formHelperText),\r\n          }}\r\n        />\r\n      </Box>\r\n      {/* Address */}\r\n      <Box>\r\n        <InputLabel htmlFor=\"address\">Địa chỉ</InputLabel>\r\n        <Box mb={2}>\r\n          <Select\r\n            options={listCity}\r\n            value={selectedCity}\r\n            onChange={async (e) => {\r\n              setSelectedCity(e)\r\n              setFieldValue('city', e.value)\r\n              await axios.get(`https://thongtindoanhnghiep.co/api/city/${e.ID}/district`).then(async (res) => {\r\n                let listDistrict = await res.data.map((item) => {\r\n                  return {\r\n                    ID: item.ID,\r\n                    type: 'district',\r\n                    value: item.Title.replace(/Quận |Huyện |Thị Xã |Thành Phố |District |Phường /g, ''),\r\n                    label: item.Title,\r\n                  }\r\n                })\r\n                setListDistrict(listDistrict)\r\n              })\r\n            }}\r\n            placeholder={'Thành phố'}\r\n            style={{ width: '100%' }}\r\n          />\r\n          <FormHelperText className={clsx(classes.formHelperText)}>{touched.city && errors.city}</FormHelperText>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <Select\r\n            options={listDistrict}\r\n            value={selectedDistrict}\r\n            onChange={async (e) => {\r\n              setSelectedDistrict(e)\r\n              setFieldValue('district', e.value)\r\n              await axios.get(`https://thongtindoanhnghiep.co/api/district/${e.ID}/ward`).then(async (res) => {\r\n                let listWard = await res.data.map((item) => {\r\n                  return {\r\n                    ID: item.ID,\r\n                    type: 'ward',\r\n                    value: item.Title.replace(/Quận |Huyện |Thị Xã |Thành Phố |District |Phường /g, ''),\r\n                    label: item.Title,\r\n                  }\r\n                })\r\n                setListWard(listWard)\r\n              })\r\n            }}\r\n            placeholder=\"Quận huyện\"\r\n            style={{ width: '100%' }}\r\n          />\r\n          <FormHelperText className={clsx(classes.formHelperText)}>\r\n            {touched.district && errors.district}\r\n          </FormHelperText>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <Select\r\n            options={listWard}\r\n            value={selectedWard}\r\n            onChange={async (e) => {\r\n              setSelectedWard(e)\r\n              setFieldValue('ward', e.value)\r\n            }}\r\n            placeholder={'Phường xã'}\r\n            style={{ width: '100%' }}\r\n          />\r\n          <FormHelperText className={clsx(classes.formHelperText)}>{touched.ward && errors.ward}</FormHelperText>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            type=\"text\"\r\n            value={values.street}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onChange={handleChange('street')}\r\n            placeholder=\"Đường\"\r\n            style={{ width: '100%' }}\r\n            helperText={touched.street && errors.street}\r\n            FormHelperTextProps={{\r\n              className: clsx(classes.formHelperText),\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            value={values.number}\r\n            onChange={handleChange('number')}\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            placeholder=\"Số nhà\"\r\n            // helperText={touched.address.number && errors.address.number}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      {/* Public Place */}\r\n      <Box pb={3}>\r\n        <CreatableSelect\r\n          options={listPublicLocation}\r\n          value={selectedLocation}\r\n          onChange={async (e) => {\r\n            setSelectedLocation(e)\r\n            setFieldValue('publicPlace', e.value)\r\n          }}\r\n          placeholder={'Gần địa điểm công cộng'}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <FormHelperText className={clsx(classes.formHelperText)}>{touched.ward && errors.ward}</FormHelperText>\r\n      </Box>\r\n      {/* Living Area */}\r\n      <Box pb={3}>\r\n        <InputLabel htmlFor=\"livingArea\">Diện tích</InputLabel>\r\n        <TextField\r\n          fullWidth\r\n          id=\"livingArea\"\r\n          value={values.livingArea}\r\n          onChange={handleChange('livingArea')}\r\n          size=\"small\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          helperText={touched.livingArea && errors.livingArea}\r\n          FormHelperTextProps={{\r\n            className: clsx(classes.formHelperText),\r\n          }}\r\n        />\r\n      </Box>\r\n      {/* Accommodation Type */}\r\n      <Box mb={3}>\r\n        <Select\r\n          options={[\r\n            { value: 'Phòng trọ', label: 'Phòng trọ' },\r\n            { value: 'Chung cư mini', label: 'Chung cư mini' },\r\n            { value: 'Nhà nguyên căn', label: 'Nhà nguyên căn' },\r\n            { value: 'Chung cư nguyên căn', label: 'Chung cư nguyên căn' },\r\n          ]}\r\n          value={values.accommodationType ? { value: values.accommodationType, label: values.accommodationType } : null}\r\n          onChange={(e) => {\r\n            setFieldValue('accommodationType', e.value)\r\n          }}\r\n          placeholder=\"Loại nhà cho thuê\"\r\n          style={{ width: '100%' }}\r\n        />\r\n        <FormHelperText className={clsx(classes.formHelperText)}>\r\n          {touched.accommodationType && errors.accommodationType}\r\n        </FormHelperText>\r\n      </Box>\r\n      {/* Price */}\r\n      <Box pb={3}>\r\n        <InputLabel htmlFor=\"price\">Giá</InputLabel>\r\n        <TextField\r\n          fullWidth\r\n          id=\"price\"\r\n          value={values.price}\r\n          onChange={handleChange('price')}\r\n          type=\"number\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      </Box>\r\n      {/* Time to live */}\r\n      <Box pb={3}>\r\n        <InputLabel htmlFor=\"week\">Tuần</InputLabel>\r\n        <TextField\r\n          fullWidth\r\n          id=\"week\"\r\n          type=\"number\"\r\n          value={values.week}\r\n          onChange={handleChange('week')}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          helperText={touched.week && errors.week}\r\n          FormHelperTextProps={{\r\n            className: clsx(classes.formHelperText),\r\n          }}\r\n        />\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\n// cơ sở vật chất\r\nconst Furniture = (props) => {\r\n  const { formik } = props\r\n  const { values, handleChange, touched, setFieldValue } = formik\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      <Box pb={3}>\r\n        <Grid container>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.seperateAccomod} onChange={handleChange('seperateAccomod')} />}\r\n              label=\"Chung chủ\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.bathroom} onChange={handleChange('bathroom')} />}\r\n              label=\"Phòng tắm\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.airConditioner} onChange={handleChange('airConditioner')} />}\r\n              label=\"Điều hoà\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.electricWaterHeater} onChange={handleChange('electricWaterHeater')} />}\r\n              label=\"Bình nóng lạnh\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.bedroom} onChange={handleChange('bedroom')} />}\r\n              label=\"Phòng ngủ\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.balcony} onChange={handleChange('balcony')} />}\r\n              label=\"Ban công\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.washingMachine} onChange={handleChange('washingMachine')} />}\r\n              label=\"Máy giặt\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={6} xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={values.fridge} onChange={handleChange('fridge')} />}\r\n              label=\"Tủ lạnh\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Box mb={2}>\r\n              <InputLabel htmlFor=\"kitchen\">Bếp</InputLabel>\r\n              <Select\r\n                options={[\r\n                  { label: 'Không có bếp', value: 'Không có bếp' },\r\n                  { label: 'Bếp chung', value: 'Bếp chung' },\r\n                  { label: 'Bếp riêng', value: 'Bếp riêng' },\r\n                ]}\r\n                value={values.kitchen ? { value: values.kitchen, label: values.kitchen } : null}\r\n                onChange={(e) => {\r\n                  setFieldValue('kitchen', e.value)\r\n                }}\r\n                placeholder=\"Bếp\"\r\n                style={{ width: '100%' }}\r\n              />\r\n              <FormHelperText className={clsx(classes.formHelperText)}>{touched.ward && errors.ward}</FormHelperText>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box width=\"100%\" mb={3} mu={3}>\r\n              <InputLabel htmlFor=\"waterPrice\">Giá nước</InputLabel>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                fullWidth\r\n                id=\"waterPrice\"\r\n                size=\"small\"\r\n                value={values.waterPrice}\r\n                onChange={handleChange('waterPrice')}\r\n                helperText={touched.title && errors.title}\r\n                FormHelperTextProps={{\r\n                  className: clsx(classes.formHelperText),\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box width=\"100%\" mu={3}>\r\n              <InputLabel htmlFor=\"electricityPrice\">Giá điện</InputLabel>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                fullWidth\r\n                id=\"electricityPrice\"\r\n                size=\"small\"\r\n                value={values.electricityPrice}\r\n                onChange={handleChange('electricityPrice')}\r\n                helperText={touched.title && errors.title}\r\n                FormHelperTextProps={{\r\n                  className: clsx(classes.formHelperText),\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nconst NewPost = (props) => {\r\n  /**\r\n   * @type {[File[], React.Dispatch<React.SetStateAction<File[]>>]}\r\n   */\r\n  const [files, setFiles] = useState([])\r\n  /**\r\n   * @type {[string[], React.Dispatch<React.SetStateAction<string[]>>]}\r\n   */\r\n\r\n   const {updateListAvatar, listAvatar} = props\r\n  const [imgData, setImgData] = useState([]) // BASE64\r\n\r\n  const [listCity, setListCity] = useState([])\r\n  const [listDistrict, setListDistrict] = useState([])\r\n  const [listWard, setListWard] = useState([])\r\n  const [listPublicLocation, setListPublicLocation] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://thongtindoanhnghiep.co/api/city`).then(async (res) => {\r\n      const cities = await res.data.LtsItem.map((item) => {\r\n        return {\r\n          ID: item.ID,\r\n          type: 'city',\r\n          value: item.Title.replace(/Quận |Huyện |Thị Xã |Thành Phố |District |Phường /g, ''),\r\n          label: item.Title,\r\n        }\r\n      })\r\n      setListCity(cities)\r\n    })\r\n    axios.get(`https://accommodation-finder.herokuapp.com/location`).then(async (res) => {\r\n      if (res.data.length !== 0) {\r\n        const listPlace = await res.data.map((l) => {\r\n          return { value: l.name, label: l.name }\r\n        })\r\n        setListPublicLocation(listPlace)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleSubmit = async (values, newfiles) => {\r\n    toast.info('Đã gửi yêu cầu đăng bài', {\r\n      position: 'bottom-left',\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n    })\r\n\r\n    var photos = []\r\n    var listPromise = []\r\n    // photos.push(value.data.data.link)\r\n    files.map(f => {\r\n      var ImgData = new FormData()\r\n      ImgData.append('image', f)\r\n      var config = {\r\n        headers: {\r\n          Authorization: 'Client-ID 8179920b3f62ec7',\r\n          Accept: '*/*',\r\n          \"Content-type\": \"application/x-www-form-urlencoded\",\r\n        }\r\n      }\r\n      var p = new Promise((res,rej) => {\r\n        axios.post(\"https://api.imgur.com/3/image\", ImgData, config).then((value) => {\r\n          res(value)\r\n        })\r\n      })\r\n      listPromise.push(p)\r\n    })\r\n    const listRes = await Promise.all(listPromise)\r\n    listRes.forEach(res => {\r\n      photos.push(res.data.data.link)\r\n    })\r\n    console.log(photos)\r\n  //   var photos = ['https://www.wellingtonnz.com/assets/Uploads/Intros/Intercontinental_room-couches-view__FocusFillWzk2MCw1MzYsInkiLDkxXQ.jpg',\r\n  //   'https://www.canterbury.ac.nz/life/accommodation/temporary/Sonoda-Temp-accom_127832166035890251.jpg',\r\n  //   'https://pix10.agoda.net/hotelImages/747/7476707/7476707_19053021300074837521.jpg?s=1024x768'\r\n  // ]\r\n\r\n    const data = {\r\n      _id: props.userData._id,\r\n      name: props.userData.name,\r\n      phoneNumber: props.userData.phoneNumber,\r\n      accomodInfo: {\r\n        houseNumber: parseInt(values.number),\r\n        street: values.street,\r\n        ward: values.ward,\r\n        district: values.district,\r\n        city: values.city,\r\n        publicPlace: values.publicPlace,\r\n        accommodationType: values.accommodationType,\r\n        price: values.price,\r\n        seperateAccommodation: values.seperateAccomod,\r\n        livingArea: values.livingArea,\r\n        photos: values.photos,\r\n        timeToLive: values.week,\r\n        title: values.title,\r\n        photos: photos,\r\n      },\r\n      facilitiesInfo: {\r\n        bathroom: { seperate: values.bathroom, amount: 1 },\r\n        bedroom: values.bedroom,\r\n        electricWaterHeater: values.electricWaterHeater,\r\n        kitchen: values.kitchen,\r\n        airConditioner: values.airConditioner,\r\n        balcony: values.balcony,\r\n        waterPrice: values.waterPrice,\r\n        electricityPrice: values.electricityPrice,\r\n        washingMachine: values.washingMachine,\r\n        fridge: values.fridge,\r\n      },\r\n    }\r\n    axios({\r\n      method: 'POST',\r\n      url: `https://accommodation-finder.herokuapp.com/accommodation/newAccomod`,\r\n      data,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        toast.success('Bài viết đã được gửi. Vui lòng chờ duyệt', {\r\n          position: 'bottom-left',\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        })\r\n        location.href='/home'\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.data.response)\r\n      })\r\n    console.log('data: ', data)\r\n  }\r\n  const newPostValidationSchema = yup.object().shape({\r\n    title: yup.string().max(50, 'Tối đa 50 kí tự').required('Không được để trống'),\r\n    city: yup.string().nullable().required('Không được để trống'),\r\n    district: yup.string().nullable().required('Không được để trống'),\r\n    ward: yup.string().nullable().required('Không được để trống'),\r\n    publicPlace: yup.string().nullable().required('Không được để trống'),\r\n    street: yup.string().nullable().required('Không được để trống'),\r\n    number: yup.string().nullable().required('Không được để trống'),\r\n    livingArea: yup.string().required('Không được để trống'),\r\n    accommodationType: yup.string().nullable().required('Không được để trống'),\r\n    price: yup.string().required('Không được để trống'),\r\n    week: yup.number().nullable().required('Không được để trống'),\r\n\r\n    seperateAccomod: yup.bool().required('Không được để trống'),\r\n    bathroom: yup.bool().required('Không được để trống'),\r\n    airConditioner: yup.bool().required('Không được để trống'),\r\n    electricWaterHeater: yup.bool().required('Không được để trống'),\r\n    bedroom: yup.bool().required('Không được để trống'),\r\n    kitchen: yup.string().required('Không được để trống'),\r\n    balcony: yup.bool().required('Không được để trống'),\r\n    washingMachine: yup.bool().required('Không được để trống'),\r\n    fridge: yup.bool().required('Không được để trống'),\r\n    waterPrice: yup.bool().required('Không được để trống'),\r\n    electricityPrice: yup.bool().required('Không được để trống'),\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      city: void 0,\r\n      district: void 0,\r\n      ward: void 0,\r\n      publicPlace: '',\r\n      street: '',\r\n      number: '',\r\n      livingArea: '',\r\n      accommodationType: '',\r\n      price: '',\r\n      week: '',\r\n\r\n      seperateAccomod: false,\r\n      bathroom: false,\r\n      airConditioner: false,\r\n      electricWaterHeater: false,\r\n      bedroom: false,\r\n      kitchen: '',\r\n      balcony: false,\r\n      washingMachine: false,\r\n      fridge: false,\r\n      waterPrice: '',\r\n      electricityPrice: '',\r\n    },\r\n    validationSchema: newPostValidationSchema,\r\n    onSubmit: (values, helpers) => {\r\n      // kiểm tra và gửi\r\n      console.log(values)\r\n    },\r\n  })\r\n\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  const steps = useMemo(() => {\r\n    return ['Thông tin chính', 'Cơ sở vật chất', 'Ảnh']\r\n  }, [])\r\n\r\n  const handlePrevStep = useCallback(() => {\r\n    if (activeStep > 0) {\r\n      setActiveStep(activeStep - 1)\r\n    }\r\n  }, [activeStep])\r\n\r\n  const handleNextStep = useCallback(() => {\r\n    if (steps.length - 1 > activeStep) {\r\n      setActiveStep(activeStep + 1)\r\n    }\r\n  }, [activeStep])\r\n\r\n  const getStepContent = useCallback(\r\n    (step) => {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <MainInfo\r\n              formik={formik}\r\n              listCity={listCity}\r\n              setListCity={setListCity}\r\n              listDistrict={listDistrict}\r\n              setListDistrict={setListDistrict}\r\n              listWard={listWard}\r\n              setListWard={setListWard}\r\n              listPublicLocation={listPublicLocation}\r\n              setListPublicLocation={setListPublicLocation}\r\n            />\r\n          )\r\n        case 1:\r\n          return <Furniture formik={formik} />\r\n        case 2:\r\n          return <UploadImage files={files} setFiles={setFiles} imgData={imgData} setImgData={setImgData} updateListAvatar={updateListAvatar}/>\r\n      }\r\n    },\r\n    [activeStep, formik]\r\n  )\r\n\r\n  const getStepButtons = useCallback(\r\n    (step) => {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <Box>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={() => handleNextStep()}>\r\n                Tiếp theo\r\n              </Button>\r\n            </Box>\r\n          )\r\n        case 1:\r\n          return (\r\n            <Box>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handlePrevStep}>\r\n                Quay lại\r\n              </Button>\r\n              &nbsp;\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNextStep}>\r\n                Tiếp theo\r\n              </Button>\r\n            </Box>\r\n          )\r\n        case 2:\r\n          return (\r\n            <Box>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handlePrevStep}>\r\n                Quay lại\r\n              </Button>\r\n              &nbsp;\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={formik.isSubmitting}\r\n                onClick={() => handleSubmit(formik.values, files)}\r\n              >\r\n                Hoàn tất\r\n              </Button>\r\n            </Box>\r\n          )\r\n        default:\r\n          return null\r\n      }\r\n    },\r\n    [activeStep]\r\n  )\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <h3 style={{ marginTop: 15 }}>New Post</h3>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, stepIndex) => {\r\n          return (\r\n            <Step key={stepIndex}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          )\r\n        })}\r\n      </Stepper>\r\n      {getStepContent(activeStep)}\r\n      {getStepButtons(activeStep)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NewPost\r\n"],"sourceRoot":""}